name: Build from Source

on:
  # Monitor the external OptiScaler repository for commits to master branch
  repository_dispatch:
    types: [upstream-commit]
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Specific commit SHA to build (optional)'
        required: false
        type: string
  
  # Trigger on pushes to build-from-commit branch
  push:
    branches:
      - build-from-commit
  
  # Schedule to check for new commits every hour
  schedule:
    - cron: '0 * * * *'

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get latest commit from OptiScaler master
        id: get-commit
        run: |
          # Get the latest commit SHA from the external repository
          LATEST_COMMIT=$(curl -s https://api.github.com/repos/optiscaler/OptiScaler/commits/master | jq -r '.sha')
          echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT
          echo "Latest commit in upstream: $LATEST_COMMIT"
          
          # Check if we have a stored commit SHA
          if [ -f .last_built_commit ]; then
            LAST_BUILT=$(cat .last_built_commit)
            echo "last_built=$LAST_BUILT" >> $GITHUB_OUTPUT
            echo "Last built commit: $LAST_BUILT"
          else
            echo "last_built=" >> $GITHUB_OUTPUT
            echo "No previous build record found"
          fi
      
      - name: Check if build is needed
        id: check-build
        run: |
          LATEST="${{ steps.get-commit.outputs.latest_commit }}"
          LAST_BUILT="${{ steps.get-commit.outputs.last_built }}"
          MANUAL_COMMIT="${{ github.event.inputs.commit_sha }}"
          
          # Use manual commit if provided, otherwise use latest
          TARGET_COMMIT="${MANUAL_COMMIT:-$LATEST}"
          
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] || [ "${{ github.event_name }}" = "push" ]; then
            echo "Manual trigger or push event - building"
            echo "should_build=true" >> $GITHUB_OUTPUT
          elif [ "$LATEST" != "$LAST_BUILT" ]; then
            echo "New commit detected - building"
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "No new commits - skipping build"
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi
          
          echo "target_commit=$TARGET_COMMIT" >> $GITHUB_OUTPUT
      
      - name: Checkout OptiScaler repository
        if: steps.check-build.outputs.should_build == 'true'
        uses: actions/checkout@v4
        with:
          repository: optiscaler/OptiScaler
          ref: ${{ steps.check-build.outputs.target_commit }}
          path: optiscaler-source
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run OptiScaler build workflow
        if: steps.check-build.outputs.should_build == 'true'
        working-directory: optiscaler-source
        run: |
          # Check if the just_build.yml workflow exists
          if [ -f .github/workflows/just_build.yml ]; then
            echo "Found just_build.yml workflow"
            
            # Set up any required environment or dependencies here
            # This will depend on what the just_build.yml workflow needs
            
            # Since we can't directly trigger another repository's workflow from here,
            # we'll need to either:
            # 1. Copy the build steps from just_build.yml and run them here, or
            # 2. Use GitHub API to trigger the workflow in the source repo
            
            echo "Note: Direct workflow execution across repositories requires additional setup"
            echo "Consider copying the build steps from just_build.yml to this workflow"
            echo "Or use GitHub API with appropriate permissions to trigger the remote workflow"
            
            # For now, let's read and display the workflow content
            echo "Content of just_build.yml:"
            cat .github/workflows/just_build.yml
            
          else
            echo "Warning: just_build.yml workflow not found in the repository"
            echo "Available workflows:"
            ls -la .github/workflows/ || echo "No workflows directory found"
          fi
      
      - name: Update build record
        if: steps.check-build.outputs.should_build == 'true'
        run: |
          # Store the commit SHA that we just built
          echo "${{ steps.check-build.outputs.target_commit }}" > .last_built_commit
          
          # Commit this back to the repository to track what we've built
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .last_built_commit
          git diff --staged --quiet || git commit -m "Update last built commit to ${{ steps.check-build.outputs.target_commit }}"
          git push
      
      - name: Build summary
        if: always()
        run: |
          if [ "${{ steps.check-build.outputs.should_build }}" = "true" ]; then
            echo "✅ Build completed for commit ${{ steps.check-build.outputs.target_commit }}"
          else
            echo "ℹ️ No build needed - no new commits detected"
          fi